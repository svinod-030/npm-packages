"use strict";var l=Object.defineProperty;var a=(i,e,s)=>e in i?l(i,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[e]=s;var n=(i,e,s)=>a(i,typeof e!="symbol"?e+"":e,s);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const g=class g{constructor(e){n(this,"toggles",{});n(this,"enableLogging",!1);e!=null&&e.enableLogging&&(this.enableLogging=e.enableLogging),this.loadToggles(e)}loadToggles(e){this.isNodeEnvironment()&&this.loadTogglesFromEnvironment(),e!=null&&e.config&&this.loadTogglesFromConfig(e.config),e!=null&&e.apiUrl&&this.loadTogglesFromApi(e.apiUrl)}static async init(e){this.instance||(this.instance=new g(e),this.instance.enableLogging&&console.log("FeatureToggleManager initialized with toggles:",this.instance.toggles)),this.instance.loadToggles(e)}isNodeEnvironment(){return typeof process<"u"&&typeof process.env=="object"&&process.env!==null}loadTogglesFromConfig(e){this.toggles={...this.toggles,...e},this.enableLogging&&console.log("Toggles loaded from config:",this.toggles)}async loadTogglesFromApi(e){try{const s=await fetch(e);if(!s.ok)throw new Error(`Failed to fetch toggles from API: ${s.statusText}`);const o=await s.json();this.toggles={...this.toggles,...o}}catch(s){console.error("Error fetching toggles from API:",s)}}loadTogglesFromEnvironment(){Object.keys(process.env).forEach(e=>{if(e.startsWith("TOGGLE_")){const s=process.env[e],o=e.replace("TOGGLE_","");this.toggles[o]=(s==null?void 0:s.toLowerCase())==="true"||(s==null?void 0:s.toLowerCase())==="on"||(s==null?void 0:s.toLowerCase())==="yes"}}),this.enableLogging&&console.log("Toggles loaded from environment:",this.toggles)}static enabled(e){if(!this.instance)throw new Error("FeatureToggleManager is not initialized. Call init() first.");console.log("toggles in enabled - ",this.instance.toggles);const s=!!this.instance.toggles[e];return this.instance.enableLogging&&console.log(`Feature "${e}" is ${s?"enabled":"disabled"}`),s}};n(g,"instance");let t=g;const r=t.init.bind(t),c=t.enabled.bind(t);exports.enabled=c;exports.init=r;
