(function(n,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(n=typeof globalThis<"u"?globalThis:n||self,i(n["feature-toggle-js"]={}))})(this,function(n){"use strict";var r=Object.defineProperty;var c=(n,i,s)=>i in n?r(n,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[i]=s;var l=(n,i,s)=>c(n,typeof i!="symbol"?i+"":i,s);const g=class g{constructor(e){l(this,"toggles",{});l(this,"enableLogging",!1);e!=null&&e.enableLogging&&(this.enableLogging=e.enableLogging),this.isNodeEnvironment()?this.loadTogglesFromEnvironment():e!=null&&e.config?this.loadTogglesFromConfig(e.config):e!=null&&e.apiUrl&&this.loadTogglesFromApi(e.apiUrl)}isNodeEnvironment(){return typeof process<"u"&&process.env!==void 0}loadTogglesFromConfig(e){this.toggles={...e}}async loadTogglesFromApi(e){try{const t=await fetch(e);if(!t.ok)throw new Error(`Failed to fetch toggles from API: ${t.statusText}`);const o=await t.json();this.toggles={...o}}catch(t){console.error("Error fetching toggles from API:",t)}}static async init(e){this.instance||(this.instance=new g(e),!this.instance.isNodeEnvironment()&&(e!=null&&e.apiUrl)&&await this.instance.loadTogglesFromApi(e.apiUrl),this.instance.enableLogging&&console.log("FeatureToggleManager initialized with toggles:",this.instance.toggles))}loadTogglesFromEnvironment(){Object.keys(process.env).forEach(e=>{e.startsWith("TOGGLE_")&&(this.toggles[e]=process.env[e].toLowerCase()==="true")}),this.enableLogging&&console.log("Toggles loaded:",this.toggles)}static enabled(e){if(!this.instance)throw new Error("FeatureToggleManager is not initialized. Call init() first.");const t=!!this.instance.toggles[e];return this.instance.enableLogging&&console.log(`Feature "${e}" is ${t?"enabled":"disabled"}`),t}};l(g,"instance");let i=g;const s=i.init.bind(i),a=i.enabled.bind(i);n.enabled=a,n.init=s,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
